#! /usr/bin/env python3

import os
import sys
import urllib.parse as up
import pathlib

USE_ARIA = os.system("aria2c -v") == 0
os.system("clear")

try:
    from tqdm import tqdm
    import requests
    from bs4 import BeautifulSoup, NavigableString
except:
    ret = os.system("pip install bs4 tqdm requests")
    if ret != 0:
        print("Running pip failed somehow. Please install 'tqdm', 'bs4' and 'requests' manually")
    print("Dependencies installed. please run again.")
    exit()

TIMEPASSBD_URL = "http://ftp.timepassbd.live"
FTPBD1_URL = "http://server1.ftpbd.net"
FTPBD2_URL = "http://server2.ftpbd.net"
FTPBD3_URL = "http://server3.ftpbd.net"
FTPBD4_URL = "http://server4.ftpbd.net"
FTPBD5_URL = "http://server5.ftpbd.net"
MOVIEHAAT_URL = "http://cdn2.moviehaat.net:8080/"
DATA_DIR = os.getenv("HOME") + "/.ftpdl"

# Logic for timepassbd anfd ftpbd
def list_or_download(base_url,path):
    f = up.unquote_plus(path.split('/')[-2])
    print("creating: " + f)
    try:
        os.mkdir(f)
    except FileExistsError:
        print("Folder ready. Proceeding.")
    except PermissionError:
        print("You do not have enough permission to download files here. Bye.")
        exit(1)
    os.chdir(f)
    data = requests.get(base_url+path).text
    soup = BeautifulSoup(data,'html.parser')
    table = soup.table

    for tr in table:
        item_type = ''
        item_url = ''
        for td in tr:
            if td.name == 'td':
                if td.img != None:
                    item_type = td.img['alt']
                if td.a != None:
                    item_url = td.a['href']
        if item_type == 'folder':
            list_or_download(base_url,item_url)
            os.chdir("..")
        elif item_type == 'file':
            file_name = up.unquote_plus(item_url.split("/")[-1])
            file_uri = base_url+item_url
            print("Downloading: " + file_name)
            if USE_ARIA:
                stat = os.system("aria2c -x 1 --auto-file-renaming=false --console-log-level=error " + file_uri)
                print(stat)
                if stat == 1792:
                    exit(stat)
            else:
                print("FILE_URI: " + file_uri)
                res = requests.get(file_uri,stream=True)
                total_size = int(res.headers.get('content-length',0))
                block_size = 1024
                # file = pathlib.Path(file_name)
                # print("FILE: " + file)
                with tqdm(total=total_size, unit="B",unit_scale=True,colour='GREEN') as pbar:
                    with open(file_name, "wb") as file:
                        for data in res.iter_content(block_size):
                            pbar.update(len(data))
                            file.write(data)
                if total_size != 0 and pbar.n != total_size:
                    print("Download failed.")
        else:    
            pass


try:
    if len(sys.argv) < 2:
        print("Need ftp url or path")
        exit()

    # Checks for timepassbd
    if sys.argv[1].startswith(TIMEPASSBD_URL):
        list_or_download(TIMEPASSBD_URL,sys.argv[1][26:])
    elif sys.argv[1].startswith("/timepassbd-data"):
        list_or_download(TIMEPASSBD_URL,sys.argv[1])
    
    # Checks for ftpbd 1
    elif sys.argv[1].startswith(FTPBD1_URL):
        list_or_download(FTPBD1_URL,sys.argv[1][24:])
    elif sys.argv[1].startswith("/FTP-1"):
        list_or_download(FTPBD1_URL,sys.argv[1])

    # Check for ftpbd 2
    elif sys.argv[1].startswith(FTPBD2_URL):
        list_or_download(FTPBD2_URL,sys.argv[1][24:])
    elif sys.argv[1].startswith("/FTP-2"):
        list_or_download(FTPBD2_URL,sys.argv[1])

    # Check for ftpbd 3
    elif sys.argv[1].startswith(FTPBD3_URL):
        list_or_download(FTPBD3_URL,sys.argv[1][24:])
    elif sys.argv[1].startswith("/FTP-3"):
        list_or_download(FTPBD3_URL,sys.argv[1])

    # Check for ftpbd 4
    elif sys.argv[1].startswith(FTPBD4_URL):
        list_or_download(FTPBD4_URL,sys.argv[1][24:])
    elif sys.argv[1].startswith("/FTP-4"):
        list_or_download(FTPBD4_URL,sys.argv[1])

    # Check for ftpbd 5
    elif sys.argv[1].startswith(FTPBD5_URL):
        list_or_download(FTPBD5_URL,sys.argv[1][24:])
    elif sys.argv[1].startswith("/FTP-1"):
        list_or_download(FTPBD5_URL,sys.argv[1])
    else:
        print("Please give a valid url or path")
except:
    print("Bye.")
